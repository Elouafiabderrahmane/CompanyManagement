### Content from file: .//Employer.java ###
package ma.barakatouna.company_management.entities;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import java.time.LocalDate;
import java.util.Set;
import lombok.Getter;
import lombok.Setter;


@Entity
@Getter
@Setter
public class Employer {

    @Id
    @Column(nullable = false, updatable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column
    private String name;

    @Column
    private String phone;

    @Column
    private String cin;

    @Column
    private String email;

    @Column
    private String adress;

    @Column
    private LocalDate hireDate;

    @Column
    private LocalDate birthDate;

    @Column
    private String url;

    @ManyToMany(mappedBy = "employers")
    private Set<Project> projets;

    @ManyToMany(mappedBy = "employer")
    private Set<Task> tasks;

    @ManyToMany
    @JoinTable(
            name = "EmployerMaterial",
            joinColumns = @JoinColumn(name = "employerId"),
            inverseJoinColumns = @JoinColumn(name = "materialId")
    )
    private Set<Material> materials;

    @OneToMany(mappedBy = "employers")
    private Set<Salary> salaries;

    @OneToMany(mappedBy = "employer")
    private Set<Payment> payments;

    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id", unique = true)
    private User user;

}


### Content from file: .//Material.java ###
package ma.barakatouna.company_management.entities;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.OneToMany;
import java.util.Set;
import lombok.Getter;
import lombok.Setter;


@Entity
@Getter
@Setter
public class Material {

    @Id
    @Column(nullable = false, updatable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column
    private String name;

    @Column(columnDefinition = "tinyint", length = 1)
    private Boolean owned;

    @Column(name = "\"reference\"")
    private String reference;

    @ManyToMany(mappedBy = "materials")
    private Set<Project> projets;

    @ManyToMany(mappedBy = "materials")
    private Set<Employer> employers;

    @OneToMany(mappedBy = "salaries")
    private Set<Salary> materials;

    @OneToMany(mappedBy = "material")
    private Set<Payment> payments;

    @ManyToMany
    @JoinTable(
            name = "MaterialTask",
            joinColumns = @JoinColumn(name = "materialId"),
            inverseJoinColumns = @JoinColumn(name = "taskId")
    )
    private Set<Task> tasks;

}


### Content from file: .//Payment.java ###
package ma.barakatouna.company_management.entities;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToOne;
import java.time.LocalDate;
import lombok.Getter;
import lombok.Setter;
import ma.barakatouna.company_management.model.Type;


@Entity
@Getter
@Setter
public class Payment {

    @Id
    @Column(nullable = false, updatable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column
    private LocalDate time;

    @Column
    @Enumerated(EnumType.STRING)
    private Type type;

    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "projet_id", unique = true)
    private Project projet;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "material_id")
    private Material material;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "employer_id")
    private Employer employer;

}


### Content from file: .//Project.java ###
package ma.barakatouna.company_management.entities;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import java.time.LocalDate;
import java.util.Set;
import lombok.Getter;
import lombok.Setter;


@Entity
@Getter
@Setter
public class Project {

    @Id
    @Column(nullable = false, updatable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column
    private String name;

    @Column(name = "\"description\"", columnDefinition = "longtext")
    private String description;

    @Column
    private Double budget;

    @Column(columnDefinition = "tinyint", length = 1)
    private Boolean paid;

    @Column(columnDefinition = "tinyint", length = 1)
    private Boolean done;

    @Column
    private LocalDate startDate;

    @Column
    private LocalDate endDate;

    @Column
    private String url;

    @ManyToMany
    @JoinTable(
            name = "ProjectEmployer",
            joinColumns = @JoinColumn(name = "projectId"),
            inverseJoinColumns = @JoinColumn(name = "employerId")
    )
    private Set<Employer> employers;

    @OneToMany(mappedBy = "projet")
    private Set<Task> tasks;

    @ManyToMany
    @JoinTable(
            name = "ProjectMaterial",
            joinColumns = @JoinColumn(name = "projectId"),
            inverseJoinColumns = @JoinColumn(name = "materialId")
    )
    private Set<Material> materials;

    @OneToOne(mappedBy = "projet", fetch = FetchType.LAZY)
    private Payment payment;

}


### Content from file: .//Salary.java ###
package ma.barakatouna.company_management.entities;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import java.time.LocalDate;
import lombok.Getter;
import lombok.Setter;
import ma.barakatouna.company_management.model.Frequency;


@Entity
@Getter
@Setter
public class Salary {

    @Id
    @Column(nullable = false, updatable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column
    private Double amount;

    @Column
    @Enumerated(EnumType.STRING)
    private Frequency frequency;

    @Column(columnDefinition = "tinyint", length = 1)
    private Boolean paid;

    @Column
    private LocalDate startingDate;

    @Column
    private String endingDate;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "employers_id")
    private Employer employers;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "salaries_id")
    private Material salaries;

}


### Content from file: .//Task.java ###
package ma.barakatouna.company_management.entities;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.ManyToOne;
import java.time.LocalDate;
import java.util.Set;
import lombok.Getter;
import lombok.Setter;
import ma.barakatouna.company_management.model.Tasktype;


@Entity
@Getter
@Setter
public class Task {

    @Id
    @Column(nullable = false, updatable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column
    @Enumerated(EnumType.STRING)
    private Tasktype tasktype;

    @Column(columnDefinition = "tinyint", length = 1)
    private Boolean done;

    @Column
    private String title;

    @Column(name = "\"description\"", columnDefinition = "longtext")
    private String description;

    @Column
    private LocalDate startingDate;

    @Column
    private LocalDate endingDate;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "projet_id")
    private Project projet;

    @ManyToMany
    @JoinTable(
            name = "TaskEmployer",
            joinColumns = @JoinColumn(name = "taskId"),
            inverseJoinColumns = @JoinColumn(name = "employerId")
    )
    private Set<Employer> employer;

    @ManyToMany(mappedBy = "tasks")
    private Set<Material> materials;

}


### Content from file: .//User.java ###
package ma.barakatouna.company_management.entities;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToOne;
import lombok.Getter;
import lombok.Setter;
import ma.barakatouna.company_management.model.UserRole;


@Entity
@Getter
@Setter
public class User {

    @Id
    @Column(nullable = false, updatable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column
    private String username;

    @Column
    private String password;

    @Column(name = "\"role\"")
    @Enumerated(EnumType.STRING)
    private UserRole role;

    @OneToOne(mappedBy = "user", fetch = FetchType.LAZY)
    private Employer employer;

}


### Content from file: .//collected_code.txt ###


### Content from file: .//copy.sh ###
#!/bin/bash

# Directory containing the files
SOURCE_DIR="./"

# Output file
OUTPUT_FILE="collected_code.txt"

# Check if the source directory exists
if [ ! -d "$SOURCE_DIR" ]; then
  echo "Source directory does not exist: $SOURCE_DIR"
  exit 1
fi

# Create or clear the output file
> "$OUTPUT_FILE"

# Loop through each file in the source directory
for file in "$SOURCE_DIR"/*; do
  # Check if it is a file (not a directory)
  if [ -f "$file" ]; then
    # Print the file name to the output file
    echo "### Content from file: $file ###" >> "$OUTPUT_FILE"
    # Append the content of the file to the output file
    cat "$file" >> "$OUTPUT_FILE"
    # Add a newline for separation
    echo -e "\n" >> "$OUTPUT_FILE"
  fi
done

echo "All code has been copied to $OUTPUT_FILE"


